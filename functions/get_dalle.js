const axios = require('axios');
const ImageKit = require("imagekit");
const { OpenAI } = require('openai');

const imagekit = new ImageKit({
    publicKey: process.env.IMAGEKIT_PUBLIC_KEY,
    privateKey: process.env.IMAGEKIT_PRIVATE_KEY,
    urlEndpoint: process.env.IMAGEKIT_URL_ENDPOINT
});

const openai = new OpenAI({ apiKey: process.env.OPENAI_APIKEY });

async function generateImage(prompt, orientation) {
  try {
    console.log("creating image");
    const resolution = orientation === 'portrait' ? '1024x1792' : '1792x1024';
    const image = await openai.images.generate({
      prompt: prompt,
      model: 'dall-e-3',
      quality: 'hd',
      size: resolution
    });
    if (image?.data[0]) { return image.data[0]; }
    else { throw new Error(image?.error?.message || "generic error"); }
  }
  catch (error) { throw error; }
}

async function uploadToImageKit(url) {
  try {
    console.log("saving image");
    const response = await axios.get(url, { responseType: 'arraybuffer' });
    if (response?.data) {
      const buffer = Buffer.from(response.data);
      const uploadResponse = await imagekit.upload({
        file: buffer,
        fileName: "dalle_image.jpg"
      });
      return uploadResponse.url;
    }
    else { throw new Error(response?.error?.message || "generic error"); }
  }
  catch (error) { throw error; }
}

const get_dalle = async ({ prompt, orientation }) => {
  console.log("get_dalle_image function was called");
  try {
    console.log(`Generating a ${orientation} image for prompt: ${prompt}`);
    const startTime = Date.now();
    const image = await generateImage(prompt, orientation);
    if (image?.url) {
      console.log("image processing");
      const imageKitUrl = await uploadToImageKit(image.url);
      const duration = (Date.now() - startTime) / 1000;
      const object = { url: imageKitUrl };
      //const object = { image: { generationTime: duration, revisedPrompt: image.revised_prompt, url: imageKitUrl } };
      console.log(object);
      return object;
    }
    else { throw new Error("image generation failed generically."); }
  }
  catch (error) { throw error; }
};

module.exports = { get_dalle };

/*
{
  "name": "get_dalle",
  "description": "Retrieves images generated by Dall-e API. Useful when asked to generate an image.",
  "parameters": {
    "type": "object",
    "properties": {
      "prompt": {
        "type": "string",
        "description": "The image description."
      },
      "orientation": {
        "type": "string",
        "description": "The image orientation.",
        "enum": [
          "landscape",
          "portrait"
        ],
        "default": "landscape"
      }
    },
    "required": [
      "prompt",
      "orientation"
    ]
  }
}
*/